apiVersion: v1
kind: Service
metadata:
  name: argocd-loadbalancer
  namespace: argo
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  loadBalancerIP: 192.168.1.251

---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant-loadbalancer
  namespace: home-assistant
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/name: home-assistant
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8123
      name: https
    - protocol: TCP
      port: 80
      targetPort: 8123
      name: http
  loadBalancerIP: 192.168.1.252

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: jasviers@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx-internal

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant-ingress
  namespace: home-assistant
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Headers espec√≠ficos para Home Assistant
    nginx.ingress.kubernetes.io/upstream-vhost: "192.168.1.252"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "http://192.168.1.252"
    nginx.ingress.kubernetes.io/proxy-redirect-to: "https://homeassistant.lakasa.club"
spec:
  tls:
  - hosts:
    - homeassistant.lakasa.club
    secretName: home-assistant-tls
  rules:
  - host: homeassistant.lakasa.club
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: home-assistant-loadbalancer
            port:
              number: 80